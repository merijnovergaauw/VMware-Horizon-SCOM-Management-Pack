<?xml version="1.0" encoding="utf-8"?>
<ManagementPack SchemaVersion="2.0" ContentReadable="true" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <Manifest>
    <Identity>
      <ID>GripLogix.VMware.HorizonView.Discovery</ID>
      <Version>1.0.0.22</Version>
    </Identity>
    <Name>VMware.HorizonView.Discovery</Name>
    <References>
      <Reference Alias="SC">
        <ID>Microsoft.SystemCenter.Library</ID>
        <Version>7.0.8433.0</Version>
        <PublicKeyToken>31bf3856ad364e35</PublicKeyToken>
      </Reference>
      <Reference Alias="Windows">
        <ID>Microsoft.Windows.Library</ID>
        <Version>7.5.8501.0</Version>
        <PublicKeyToken>31bf3856ad364e35</PublicKeyToken>
      </Reference>
      <Reference Alias="Health">
        <ID>System.Health.Library</ID>
        <Version>7.0.8433.0</Version>
        <PublicKeyToken>31bf3856ad364e35</PublicKeyToken>
      </Reference>
      <Reference Alias="System">
        <ID>System.Library</ID>
        <Version>7.5.8501.0</Version>
        <PublicKeyToken>31bf3856ad364e35</PublicKeyToken>
      </Reference>
    </References>
  </Manifest>
  <TypeDefinitions>
    <EntityTypes>
      <ClassTypes>
        <ClassType ID="GripLogix.VMware.HorizonView.ResourcePool" Accessibility="Public" Abstract="false" Base="SC!Microsoft.SystemCenter.ManagementServicePool" Hosted="false" Singleton="true" Extension="false" />
        <ClassType ID="GripLogix.VMware.HorizonView.Server" Accessibility="Public" Abstract="false" Base="Windows!Microsoft.Windows.ComputerRole" Hosted="true" Singleton="false">
          <Property ID="Name" Type="string" Key="false" CaseSensitive="false" MinLength="0" MaxLength="256" />
          <Property ID="Datacenter" Type="string" Key="false" />
        </ClassType>
        <ClassType ID="GripLogix.VMware.HorizonView.WindowsService" Accessibility="Public" Abstract="false" Base="Windows!Microsoft.Windows.ApplicationComponent" Hosted="true" Singleton="false">
          <Property ID="Name" Key="true" Type="string" />
          <Property ID="ServiceProcessName" Key="false" Type="string" />
          <Property ID="ServiceDescription" Key="false" Type="string" />
        </ClassType>
        <ClassType ID="GripLogix.VMware.HorizonView.Pool" Accessibility="Public" Abstract="false" Base="System!System.ApplicationComponent" Hosted="true" Singleton="false">
          <Property ID="Name" Type="string" Key="true" />
          <Property ID="GlobalEntitlementName" Type="string" Key="false" />
          <Property ID="GlobalEntitlementId" Type="string" Key="false" />
        </ClassType>
        <ClassType ID="GripLogix.VMware.HorizonView.Datacenter" Accessibility="Public" Abstract="false" Base="System!System.ApplicationComponent" Hosted="true" Singleton="false">
          <Property ID="Name" Type="string" Key="true" />
        </ClassType>
        <ClassType ID="GripLogix.VMware.HorizonView.ServerContainer" Accessibility="Public" Abstract="false" Base="System!System.ApplicationComponent" Hosted="true" Singleton="false"></ClassType>
        <ClassType ID="GripLogix.VMware.HorizonView.PoolContainer" Accessibility="Public" Abstract="false" Base="System!System.ApplicationComponent" Hosted="true" Singleton="false"></ClassType>
        <ClassType ID="GripLogix.VMware.HorizonView.GlobalEntitlement" Accessibility="Public" Abstract="false" Base="System!System.ApplicationComponent" Hosted="false" Singleton="false">
          <Property ID="Id" Type="string" Key="true" />
          <Property ID="Name" Type="string" Key="false" />
        </ClassType>
        <ClassType ID="GripLogix.VMware.HorizonView.Service" Accessibility="Public" Abstract="false" Base="System!System.Service" Hosted="false" Singleton="true"></ClassType>
      </ClassTypes>
      <RelationshipTypes>
        <RelationshipType ID="GripLogix.VMware.HorizonView.GlobalEntitlement.hosts.Datacenter" Base="System!System.Hosting" Abstract="false" Accessibility="Public">
          <Source ID="Source" Type="GripLogix.VMware.HorizonView.GlobalEntitlement" />
          <Target ID="Target" Type="GripLogix.VMware.HorizonView.Datacenter" />
        </RelationshipType>
        <RelationshipType ID="GripLogix.VMware.HorizonView.Datacenter.hosts.PoolContainer" Base="System!System.Hosting" Abstract="false" Accessibility="Public">
          <Source ID="Source" Type="GripLogix.VMware.HorizonView.Datacenter" />
          <Target ID="Target" Type="GripLogix.VMware.HorizonView.PoolContainer" />
        </RelationshipType>
        <RelationshipType ID="GripLogix.VMware.HorizonView.PoolContainer.hosts.Pool" Base="System!System.Hosting" Abstract="false" Accessibility="Public">
          <Source ID="Source" Type="GripLogix.VMware.HorizonView.PoolContainer" />
          <Target ID="Target" Type="GripLogix.VMware.HorizonView.Pool" />
        </RelationshipType>
        <RelationshipType ID="GripLogix.VMware.HorizonView.Datacenter.hosts.ServerContainer" Base="System!System.Hosting" Abstract="false" Accessibility="Public">
          <Source ID="Source" Type="GripLogix.VMware.HorizonView.Datacenter" />
          <Target ID="Target" Type="GripLogix.VMware.HorizonView.ServerContainer" />
        </RelationshipType>
        <RelationshipType ID="GripLogix.VMware.HorizonView.ServerContainer.contains.Server" Base="System!System.Containment" Abstract="false" Accessibility="Public">
          <Source ID="Source" Type="GripLogix.VMware.HorizonView.ServerContainer" />
          <Target ID="Target" Type="GripLogix.VMware.HorizonView.Server" />
        </RelationshipType>
        <RelationshipType ID="GripLogix.VMware.HorizonView.Server.hosts.WindowsService" Base="System!System.Hosting" Abstract="false" Accessibility="Public">
          <Source ID="Source" Type="GripLogix.VMware.HorizonView.Server" />
          <Target ID="Target" Type="GripLogix.VMware.HorizonView.WindowsService" />
        </RelationshipType>
        <RelationshipType ID="GripLogix.VMware.HorizonView.Service.contains.GlobalEntitlement" Base="System!System.Containment" Abstract="false" Accessibility="Public">
          <Source ID="Source" Type="GripLogix.VMware.HorizonView.Service" />
          <Target ID="Target" Type="GripLogix.VMware.HorizonView.GlobalEntitlement" />
        </RelationshipType>
      </RelationshipTypes>
    </EntityTypes>
    <SecureReferences>
      <SecureReference ID="GripLogix.VMware.HorizonView.RunAsProfile" Accessibility="Public" />
    </SecureReferences>
    <ModuleTypes>
      <DataSourceModuleType ID="GripLogix.VMware.HorizonView.DataSource.Discovery" Accessibility="Public">
        <Configuration>
          <xsd:element name="TimeoutSeconds" type="xsd:integer" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="IntervalSeconds" type="xsd:integer" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
        </Configuration>
        <OverrideableParameters>
          <OverrideableParameter ID="TimeoutSeconds" Selector="$Config/TimeoutSeconds$" ParameterType="int" />
          <OverrideableParameter ID="IntervalSeconds" Selector="$Config/IntervalSeconds$" ParameterType="int" />
        </OverrideableParameters>
        <ModuleImplementation>
          <Composite>
            <MemberModules>
              <DataSource ID="Scheduler" TypeID="System!System.Scheduler">
                <Scheduler>
                  <SimpleReccuringSchedule>
                    <Interval Unit="Seconds">$Config/IntervalSeconds$</Interval>
                    <SyncTime />
                  </SimpleReccuringSchedule>
                  <ExcludeDates />
                </Scheduler>
              </DataSource>
              <ProbeAction ID="PowerShellProbe" TypeID="GripLogix.VMware.HorizonView.Probe.Discovery">
                <TimeoutSeconds>$Config/TimeoutSeconds$</TimeoutSeconds>
              </ProbeAction>
            </MemberModules>
            <Composition>
              <Node ID="PowerShellProbe">
                <Node ID="Scheduler" />
              </Node>
            </Composition>
          </Composite>
        </ModuleImplementation>
        <OutputType>System!System.Discovery.Data</OutputType>
      </DataSourceModuleType>
      <DataSourceModuleType ID="GripLogix.VMware.HorizonView.DataSource.ResourcePool" Accessibility="Public" Batching="false">
        <Configuration>
          <xsd:element name="IntervalSeconds" type="xsd:integer" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
        </Configuration>
        <OverrideableParameters>
          <OverrideableParameter ID="IntervalSeconds" Selector="$Config/IntervalSeconds$" ParameterType="int" />
        </OverrideableParameters>
        <ModuleImplementation Isolation="Any">
          <Composite>
            <MemberModules>
              <DataSource ID="Scheduler" TypeID="System!System.Discovery.Scheduler">
                <Scheduler>
                  <SimpleReccuringSchedule>
                    <Interval>$Config/IntervalSeconds$</Interval>
                    <SyncTime />
                  </SimpleReccuringSchedule>
                  <ExcludeDates />
                </Scheduler>
              </DataSource>
              <ConditionDetection ID="Mapper" TypeID="System!System.Discovery.ClassSnapshotDataMapper">
                <ClassId>$MPElement[Name="SC!Microsoft.SystemCenter.ManagementServicePoolWatcher"]$</ClassId>
                <InstanceSettings>
                  <Settings>
                    <Setting>
                      <Name>$MPElement[Name="SC!Microsoft.SystemCenter.ManagementServicePoolWatcher"]/PoolId$</Name>
                      <Value>$Target/Id$</Value>
                    </Setting>
                    <Setting>
                      <Name>$MPElement[Name="SC!Microsoft.SystemCenter.ManagementServicePoolWatcher"]/PoolName$</Name>
                      <Value>$Target/Property[Type="System!System.Entity"]/DisplayName$</Value>
                    </Setting>
                    <Setting>
                      <Name>$MPElement[Name="System!System.Entity"]/DisplayName$</Name>
                      <Value>$Target/Property[Type="System!System.Entity"]/DisplayName$ Watcher</Value>
                    </Setting>
                  </Settings>
                </InstanceSettings>
              </ConditionDetection>
            </MemberModules>
            <Composition>
              <Node ID="Mapper">
                <Node ID="Scheduler" />
              </Node>
            </Composition>
          </Composite>
        </ModuleImplementation>
        <OutputType>System!System.Discovery.Data</OutputType>
      </DataSourceModuleType>
      <ProbeActionModuleType ID="GripLogix.VMware.HorizonView.Probe.Discovery" Accessibility="Public">
        <Configuration>
          <xsd:element name="TimeoutSeconds" type="xsd:integer" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
        </Configuration>
        <OverrideableParameters>
          <OverrideableParameter ID="TimeoutSeconds" Selector="$Config/TimeoutSeconds$" ParameterType="int" />
        </OverrideableParameters>
        <ModuleImplementation>
          <Composite>
            <MemberModules>
              <ProbeAction TypeID="Windows!Microsoft.Windows.PowerShellDiscoveryProbe" ID="PowerShellProbe">
                <ScriptName>HorizonView.Discovery.ps1</ScriptName>
                <ScriptBody><![CDATA[## Author: Merijn Overgaauw, GripLogix Consulting

param($sourceId, $managedEntityId, $domainName, $userName, $password)
$params = "$sourceId, $managedEntityId"
$debug = $true
 
# Constants used for event logging
$SCRIPT_NAME            = 'HorizonView.Discovery.ps1'
$EVENT_LEVEL_ERROR      = 1
$EVENT_LEVEL_WARNING    = 2
$EVENT_LEVEL_INFO       = 4
 
$SCRIPT_STARTED         = 9101
$PROPERTYBAG_CREATED    = 9102
$ERROR_GENERATED        = 9103
$INFO_GENERATED         = 9104
$SCRIPT_ENDED           = 9105

#==================================================================================
# Sub:        LogDebugEvent
# Purpose:    Logs an informational event to the Operations Manager event log
#            only if Debug argument is true
#==================================================================================
function Log-DebugEvent
    {
        param($eventNo, $eventLevel, $message)
 
        $message = "`n" + $message
        if ($debug)
        {
            $api.LogScriptEvent($SCRIPT_NAME,$eventNo,$eventLevel,$message)
        }
    }
#==================================================================================

# Start script.
$api = New-Object -comObject 'MOM.ScriptAPI'
$discoveryData = $api.CreateDiscoveryData(0, $SourceId, $ManagedEntityId)

$message = "$SCRIPT_NAME script started. `nParameters:`n$params"
Log-DebugEvent $SCRIPT_STARTED $EVENT_LEVEL_INFO $message

# Load PowerCli module.
Try {
    Import-Module VMware.VimAutomation.HorizonView -ErrorAction Stop
    Import-Module VMware.VimAutomation.Core -ErrorAction Stop
    Import-Module VMware.Hv.Helper -ErrorAction Stop
    }
Catch {message = "Import-Module. Error: $_."; Log-DebugEvent $ERROR_GENERATED $EVENT_LEVEL_ERROR $message}

# Load OpsMgr module.
$operationsManagerCmdletsTest = (Get-Module | % {$_.Name}) -Join ' '
If (!$operationsManagerCmdletsTest.Contains('OperationsManager'))
	{
	$moduleFound = $false
	$setupKeys = @('HKLM:\Software\Microsoft\Microsoft Operations Manager\3.0\Setup',
	'HKLM:\SOFTWARE\Microsoft\System Center Operations Manager\12\Setup')
	foreach($setupKey in $setupKeys)
		{
		If ((Test-Path $setupKey) -and ($moduleFound -eq $false))
			{
			$setupKey = Get-Item -Path $setupKey
			$installDirectory = $setupKey.GetValue('InstallDirectory')
			$psmPath = $installdirectory + '\Powershell\OperationsManager\OperationsManager.psm1'
			If (Test-Path $psmPath) {$moduleFound = $true}
			}
		}
	If ($moduleFound)
		{
		Try {Import-Module $psmPath -ErrorAction Stop}
		Catch {$message = "Failed to load OpsMgr module. Error: $_"
		Log-DebugEvent $ERROR_GENERATED $EVENT_LEVEL_ERROR $message}
		}
	Else
		{
		Try {Import-Module OperationsManager -ErrorAction Stop}
		Catch {$message = "Failed to load OpsMgr module. Error: $_"
		Log-DebugEvent $ERROR_GENERATED $EVENT_LEVEL_ERROR $message}
		}
	}
  
Try {$horizonViewServers = Get-SCOMClass -Name "GripLogix.VMware.HorizonView.Server" -ErrorAction Stop | Get-SCOMClassInstance | ? {$_.IsAvailable -eq $true}}
Catch {$message = "Get-SCOMClass -Name GripLogix.VMware.HorizonView.Server failed. Error: $_."; Log-DebugEvent $ERROR_GENERATED $EVENT_LEVEL_ERROR $message}

# Create credential
$secPassword = $password | ConvertTo-SecureString -AsPlainText -Force
$cred = New-Object System.Management.Automation.PSCredential (("$domainName\$userName"), $secPassword)
 
Foreach ($horizonViewServer in $horizonViewServers) 
    {
    $horizonViewServerName = $horizonViewServer.DisplayName
		
	$message = "Starting discovery on server: $horizonViewServerName"
	Log-DebugEvent $PROPERTYBAG_CREATED $EVENT_LEVEL_INFO $message

    Try {$hvServer = Connect-HVServer -server $horizonViewServerName -credential $cred -ErrorAction Stop;$hvServerDiscoverySucceeded = $true}
    Catch {$hvServerDiscoverySucceeded = $false; $message = "Connect-HVServer to $horizonViewServerName failed. Error: $_."; Log-DebugEvent $ERROR_GENERATED $EVENT_LEVEL_ERROR $message}
  
    $viewAPI = $hvServer.ExtensionData
    $dataCenter = $viewAPI.Pod.Pod_List() | ? {$_.LocalPod -eq $true}
	$dataCenterName = $dataCenter.DisplayName

    Try {$globalEntitlements = Get-HVGlobalEntitlement -HvServer $hvServer -ErrorAction Stop}
    Catch {$message = "Get-HVGlobalEntitlement failed. Error: $_."; Log-DebugEvent $ERROR_GENERATED $EVENT_LEVEL_ERROR $message}
 
    Try {
        Get-HVPool -HvServer $hvServer -ErrorAction Stop | ? {$_ -ne $null} | % {
            $poolName = $_.Base.DisplayName
			$poolGlobalEntitlementId = $_.GlobalEntitlementData.GlobalEntitlement.Id
			$poolGlobalEntitlementDisplayName = $globalEntitlements | ? {$_.Id.Id -eq $poolGlobalEntitlementId} | % {$_.Base.DisplayName}

			If ($poolGlobalEntitlementId -and $datacenterName -and $dataCenterName -ne "")
				{
				$GrandParentInstance = $discoveryData.CreateClassInstance("$MPElement[Name='GripLogix.VMware.HorizonView.GlobalEntitlement']$")
				$GrandParentInstance.AddProperty("$MPElement[Name='GripLogix.VMware.HorizonView.GlobalEntitlement']/Id$", "$poolGlobalEntitlementId")
				$GrandParentInstance.AddProperty("$MPElement[Name='GripLogix.VMware.HorizonView.GlobalEntitlement']/Name$", $poolGlobalEntitlementDisplayName)
				$GrandParentInstance.AddProperty("$MPElement[Name='System!System.Entity']/DisplayName$", $poolGlobalEntitlementDisplayName)
				$discoveryData.AddInstance($GrandParentInstance)

				$ParentInstance = $discoveryData.CreateClassInstance("$MPElement[Name='GripLogix.VMware.HorizonView.Datacenter']$")
				$ParentInstance.AddProperty("$MPElement[Name='GripLogix.VMware.HorizonView.GlobalEntitlement']/Id$", "$poolGlobalEntitlementId")
				$ParentInstance.AddProperty("$MPElement[Name='GripLogix.VMware.HorizonView.Datacenter']/Name$", $dataCenterName)
				$ParentInstance.AddProperty("$MPElement[Name='System!System.Entity']/DisplayName$", $dataCenterName)
				$discoveryData.AddInstance($ParentInstance)

				$Instance = $discoveryData.CreateClassInstance("$MPElement[Name='GripLogix.VMware.HorizonView.PoolContainer']$")
				$Instance.AddProperty("$MPElement[Name='GripLogix.VMware.HorizonView.GlobalEntitlement']/Id$", "$poolGlobalEntitlementId")
				$Instance.AddProperty("$MPElement[Name='GripLogix.VMware.HorizonView.Datacenter']/Name$", $dataCenterName)
				$Instance.AddProperty("$MPElement[Name='System!System.Entity']/DisplayName$", "Pools")
				$discoveryData.AddInstance($Instance)

				$ChildInstance = $discoveryData.CreateClassInstance("$MPElement[Name='GripLogix.VMware.HorizonView.Pool']$")
				$ChildInstance.AddProperty("$MPElement[Name='GripLogix.VMware.HorizonView.GlobalEntitlement']/Id$", "$poolGlobalEntitlementId")
				$ChildInstance.AddProperty("$MPElement[Name='GripLogix.VMware.HorizonView.Datacenter']/Name$", $dataCenterName)
				$ChildInstance.AddProperty("$MPElement[Name='GripLogix.VMware.HorizonView.Pool']/Name$", $poolName)
				$ChildInstance.AddProperty("$MPElement[Name='GripLogix.VMware.HorizonView.Pool']/GlobalEntitlementId$", "$poolGlobalEntitlementId")
				$ChildInstance.AddProperty("$MPElement[Name='GripLogix.VMware.HorizonView.Pool']/GlobalEntitlementName$", $poolGlobalEntitlementDisplayName)
				$ChildInstance.AddProperty("$MPElement[Name='System!System.Entity']/DisplayName$", $poolName)
				$discoveryData.AddInstance($ChildInstance)

				$Instance = $discoveryData.CreateClassInstance("$MPElement[Name='GripLogix.VMware.HorizonView.ServerContainer']$")
				$Instance.AddProperty("$MPElement[Name='GripLogix.VMware.HorizonView.GlobalEntitlement']/Id$", "$poolGlobalEntitlementId")
				$Instance.AddProperty("$MPElement[Name='GripLogix.VMware.HorizonView.Datacenter']/Name$", $dataCenterName)
				$Instance.AddProperty("$MPElement[Name='System!System.Entity']/DisplayName$", "Servers")
				$discoveryData.AddInstance($Instance)
		
				$ChildInstance = $discoveryData.CreateClassInstance("$MPElement[Name='GripLogix.VMware.HorizonView.Server']$")
				$ChildInstance.AddProperty("$MPElement[Name='Windows!Microsoft.Windows.Computer']/PrincipalName$", $horizonViewServerName)
				$ChildInstance.AddProperty("$MPElement[Name='GripLogix.VMware.HorizonView.Server']/Name$", $horizonViewServerName)
				$ChildInstance.AddProperty("$MPElement[Name='GripLogix.VMware.HorizonView.Server']/Datacenter$", $dataCenterName)
				$ChildInstance.AddProperty("$MPElement[Name='System!System.Entity']/DisplayName$", $horizonViewServerName)
				$discoveryData.AddInstance($ChildInstance)

				$RelationshipInstance = $discoveryData.CreateRelationshipInstance("$MPElement[Name='GripLogix.VMware.HorizonView.ServerContainer.contains.Server']$")
				$RelationshipInstance.Source = $Instance
				$RelationshipInstance.Target = $ChildInstance
				$discoveryData.AddInstance($RelationshipInstance)
				}
            }
        }
    Catch {message = "Get-HVPool failed. Error: $_."; Log-DebugEvent $ERROR_GENERATED $EVENT_LEVEL_ERROR $message}

	$hvServer = $null
    $horizonViewServerName = $null
    $viewAPI = $null
	$dataCenter = $null
	$dataCenterName = $null
    $globalEntitlements = $null
	$poolName = $null
	$poolGlobalEntitlementId = $null
	$poolGlobalEntitlementDisplayName = $null
    }
 
$discoveryData
$message = "$SCRIPT_NAME script ended. Parameters:`n$params"
Log-DebugEvent $SCRIPT_ENDED $EVENT_LEVEL_INFO $message
  
 

]]></ScriptBody>
                <Parameters>
                  <Parameter>
                    <Name>sourceID</Name>
                    <Value>$MPElement$</Value>
                  </Parameter>
                  <Parameter>
                    <Name>managedEntityID</Name>
                    <Value>$Target/Id$</Value>
                  </Parameter>
                  <Parameter>
                    <Name>domainName</Name>
                    <Value>$RunAs[Name="GripLogix.VMware.HorizonView.RunAsProfile"]/Domain$</Value>
                  </Parameter>
                  <Parameter>
                    <Name>userName</Name>
                    <Value>$RunAs[Name="GripLogix.VMware.HorizonView.RunAsProfile"]/UserName$</Value>
                  </Parameter>
                  <Parameter>
                    <Name>password</Name>
                    <Value>$RunAs[Name="GripLogix.VMware.HorizonView.RunAsProfile"]/Password$</Value>
                  </Parameter>
                </Parameters>
                <TimeoutSeconds>$Config/TimeoutSeconds$</TimeoutSeconds>
              </ProbeAction>
            </MemberModules>
            <Composition>
              <Node ID="PowerShellProbe" />
            </Composition>
          </Composite>
        </ModuleImplementation>
        <OutputType>System!System.Discovery.Data</OutputType>
        <InputType>System!System.BaseData</InputType>
      </ProbeActionModuleType>
    </ModuleTypes>
  </TypeDefinitions>
  <Monitoring>
    <Discoveries>
      <Discovery ID="GripLogix.VMware.HorizonView.Discovery.Populate.HorizonviewService" Target="GripLogix.VMware.HorizonView.Service" Enabled="true" ConfirmDelivery="false" Remotable="true" Priority="Normal">
        <Category>Discovery</Category>
        <DiscoveryTypes />
        <DataSource ID="DS" TypeID="SC!Microsoft.SystemCenter.GroupPopulator">
          <RuleId>$MPElement$</RuleId>
          <GroupInstanceId>$Target/Id$</GroupInstanceId>
          <MembershipRules>
            <MembershipRule>
              <MonitoringClass>$MPElement[Name="GripLogix.VMware.HorizonView.GlobalEntitlement"]$</MonitoringClass>
              <RelationshipClass>$MPElement[Name="GripLogix.VMware.HorizonView.Service.contains.GlobalEntitlement"]$</RelationshipClass>
            </MembershipRule>
          </MembershipRules>
        </DataSource>
      </Discovery>
      <Discovery ID="GripLogix.VMware.HorizonView.Discovery.HorizonView.Objects" Target="SC!Microsoft.SystemCenter.RootManagementServer" Enabled="true" ConfirmDelivery="false" Remotable="true" Priority="Normal">
        <Category>Discovery</Category>
        <DiscoveryTypes>
          <DiscoveryClass TypeID="GripLogix.VMware.HorizonView.GlobalEntitlement" />
          <DiscoveryClass TypeID="GripLogix.VMware.HorizonView.Datacenter" />
          <DiscoveryClass TypeID="GripLogix.VMware.HorizonView.Pool" />
        </DiscoveryTypes>
        <DataSource ID="DS" TypeID="GripLogix.VMware.HorizonView.DataSource.Discovery">
          <TimeoutSeconds>900</TimeoutSeconds>
          <IntervalSeconds>3600</IntervalSeconds>
        </DataSource>
      </Discovery>
      <Discovery ID="GripLogix.VMware.HorizonView.Discovery.HorizonViewServer" Target="Windows!Microsoft.Windows.Computer" Enabled="true" ConfirmDelivery="false" Remotable="true" Priority="Normal">
        <Category>Discovery</Category>
        <DiscoveryTypes>
          <DiscoveryClass TypeID="GripLogix.VMware.HorizonView.Server" />
        </DiscoveryTypes>
        <DataSource ID="DS" TypeID="Windows!Microsoft.Windows.FilteredRegistryDiscoveryProvider">
          <ComputerName>$Target/Property[Type="Windows!Microsoft.Windows.Computer"]/PrincipalName$</ComputerName>
          <RegistryAttributeDefinitions>
            <RegistryAttributeDefinition>
              <AttributeName>AppExists</AttributeName>
              <Path>SOFTWARE\VMware, Inc.\VMware Horizon</Path>
              <PathType>0</PathType>
              <AttributeType>0</AttributeType>
            </RegistryAttributeDefinition>
          </RegistryAttributeDefinitions>
          <Frequency>14400</Frequency>
          <ClassId>$MPElement[Name="GripLogix.VMware.HorizonView.Server"]$</ClassId>
          <InstanceSettings>
            <Settings>
              <Setting>
                <Name>$MPElement[Name="Windows!Microsoft.Windows.Computer"]/PrincipalName$</Name>
                <Value>$Target/Property[Type="Windows!Microsoft.Windows.Computer"]/PrincipalName$</Value>
              </Setting>
              <Setting>
                <Name>$MPElement[Name="System!System.Entity"]/DisplayName$</Name>
                <Value>$Target/Property[Type="Windows!Microsoft.Windows.Computer"]/PrincipalName$</Value>
              </Setting>
            </Settings>
          </InstanceSettings>
          <Expression>
            <SimpleExpression>
              <ValueExpression>
                <XPathQuery Type="String">Values/AppExists</XPathQuery>
              </ValueExpression>
              <Operator>Equal</Operator>
              <ValueExpression>
                <Value Type="String">True</Value>
              </ValueExpression>
            </SimpleExpression>
          </Expression>
        </DataSource>
      </Discovery>
      <Discovery ID="GripLogix.VMware.HorizonView.Discovery.ServiceManagedByResourcePool" Target="SC!Microsoft.SystemCenter.RootManagementServer" Enabled="true" ConfirmDelivery="false" Remotable="true" Priority="Normal">
        <Category>Discovery</Category>
        <DiscoveryTypes />
        <DataSource ID="DS" TypeID="SC!Microsoft.SystemCenter.GroupPopulator">
          <RuleId>$MPElement$</RuleId>
          <GroupInstanceId>$MPElement[Name="GripLogix.VMware.HorizonView.ResourcePool"]$</GroupInstanceId>
          <MembershipRules>
            <MembershipRule>
              <MonitoringClass>$MPElement[Name="GripLogix.VMware.HorizonView.Service"]$</MonitoringClass>
              <RelationshipClass>$MPElement[Name="SC!Microsoft.SystemCenter.ManagementActionPointShouldManageEntity"]$</RelationshipClass>
            </MembershipRule>
          </MembershipRules>
        </DataSource>
      </Discovery>
      <Discovery ID="GripLogix.VMware.HorizonView.Discovery.HorizonView.WindowsService" Target="GripLogix.VMware.HorizonView.Server" Enabled="true" ConfirmDelivery="false" Remotable="true" Priority="Normal">
        <Category>Discovery</Category>
        <DiscoveryTypes>
          <DiscoveryClass TypeID="GripLogix.VMware.HorizonView.WindowsService" />
        </DiscoveryTypes>
        <DataSource ID="DS" TypeID="Windows!Microsoft.Windows.WmiProviderWithClassSnapshotDataMapper">
          <NameSpace>root\cimv2</NameSpace>
          <Query>select * from win32_service where displayname like 'VMware%'</Query>
          <Frequency>3600</Frequency>
          <ClassId>$MPElement[Name="GripLogix.VMware.HorizonView.WindowsService"]$</ClassId>
          <InstanceSettings>
            <Settings>
              <Setting>
                <Name>$MPElement[Name="Windows!Microsoft.Windows.Computer"]/PrincipalName$</Name>
                <Value>$Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/PrincipalName$</Value>
              </Setting>
              <Setting>
                <Name>$MPElement[Name="GripLogix.VMware.HorizonView.WindowsService"]/Name$</Name>
                <Value>$Data/Property[@Name='Name']$</Value>
              </Setting>
              <Setting>
                <Name>$MPElement[Name="GripLogix.VMware.HorizonView.WindowsService"]/Name$</Name>
                <Value>$Data/Property[@Name='Name']$</Value>
              </Setting>
              <Setting>
                <Name>$MPElement[Name="GripLogix.VMware.HorizonView.WindowsService"]/ServiceProcessName$</Name>
                <Value>$Data/Property[@Name='PathName']$</Value>
              </Setting>
              <Setting>
                <Name>$MPElement[Name="GripLogix.VMware.HorizonView.WindowsService"]/ServiceDescription$</Name>
                <Value>$Data/Property[@Name='Description']$</Value>
              </Setting>
              <Setting>
                <Name>$MPElement[Name="System!System.Entity"]/DisplayName$</Name>
                <Value>$Data/Property[@Name='DisplayName']$</Value>
              </Setting>
            </Settings>
          </InstanceSettings>
        </DataSource>
      </Discovery>
      <Discovery ID="GripLogix.VMware.HorizonView.Discovery.HorizonView.ResourcePool" Target="GripLogix.VMware.HorizonView.ResourcePool" Enabled="true" ConfirmDelivery="false" Remotable="true" Priority="Normal">
        <Category>Discovery</Category>
        <DiscoveryTypes />
        <DataSource ID="DS" TypeID="GripLogix.VMware.HorizonView.DataSource.ResourcePool">
          <IntervalSeconds>14400</IntervalSeconds>
        </DataSource>
      </Discovery>
      <Discovery ID="GripLogix.VMware.HorizonView.Discovery.GlobalEntitlementManagedByResourcePool" Target="SC!Microsoft.SystemCenter.RootManagementServer" Enabled="true" ConfirmDelivery="false" Remotable="true" Priority="Normal">
        <Category>Discovery</Category>
        <DiscoveryTypes />
        <DataSource ID="DS" TypeID="SC!Microsoft.SystemCenter.GroupPopulator">
          <RuleId>$MPElement$</RuleId>
          <GroupInstanceId>$MPElement[Name="GripLogix.VMware.HorizonView.ResourcePool"]$</GroupInstanceId>
          <MembershipRules>
            <MembershipRule>
              <MonitoringClass>$MPElement[Name="GripLogix.VMware.HorizonView.GlobalEntitlement"]$</MonitoringClass>
              <RelationshipClass>$MPElement[Name="SC!Microsoft.SystemCenter.ManagementActionPointShouldManageEntity"]$</RelationshipClass>
            </MembershipRule>
          </MembershipRules>
        </DataSource>
      </Discovery>
    </Discoveries>
    <Monitors>
      <DependencyMonitor ID="GripLogix.VMware.HorizonView.DependencyMonitor.Service.contains.GlobalEntitlement.AvailabilityState" Accessibility="Internal" Enabled="true" Target="GripLogix.VMware.HorizonView.Service" ParentMonitorID="Health!System.Health.AvailabilityState" Remotable="true" Priority="Normal" RelationshipType="GripLogix.VMware.HorizonView.Service.contains.GlobalEntitlement" MemberMonitor="Health!System.Health.AvailabilityState">
        <Category>AvailabilityHealth</Category>
        <Algorithm>WorstOf</Algorithm>
      </DependencyMonitor>
      <DependencyMonitor ID="GripLogix.VMware.HorizonView.DependencyMonitor.Service.contains.GlobalEntitlement.PerformanceState" Accessibility="Internal" Enabled="true" Target="GripLogix.VMware.HorizonView.Service" ParentMonitorID="Health!System.Health.PerformanceState" Remotable="true" Priority="Normal" RelationshipType="GripLogix.VMware.HorizonView.Service.contains.GlobalEntitlement" MemberMonitor="Health!System.Health.PerformanceState">
        <Category>PerformanceHealth</Category>
        <Algorithm>WorstOf</Algorithm>
      </DependencyMonitor>
      <DependencyMonitor ID="GripLogix.VMware.HorizonView.DependencyMonitor.GlobalEntityEntitlement.hosts.Datacenter.AvailabilityState" Accessibility="Internal" Enabled="true" Target="GripLogix.VMware.HorizonView.GlobalEntitlement" ParentMonitorID="Health!System.Health.AvailabilityState" Remotable="true" Priority="Normal" RelationshipType="GripLogix.VMware.HorizonView.GlobalEntitlement.hosts.Datacenter" MemberMonitor="Health!System.Health.AvailabilityState">
        <Category>AvailabilityHealth</Category>
        <Algorithm>WorstOf</Algorithm>
      </DependencyMonitor>
      <DependencyMonitor ID="GripLogix.VMware.HorizonView.DependencyMonitor.GlobalEntityEntitlement.hosts.Datacenter.PerformanceState" Accessibility="Internal" Enabled="true" Target="GripLogix.VMware.HorizonView.GlobalEntitlement" ParentMonitorID="Health!System.Health.PerformanceState" Remotable="true" Priority="Normal" RelationshipType="GripLogix.VMware.HorizonView.GlobalEntitlement.hosts.Datacenter" MemberMonitor="Health!System.Health.PerformanceState">
        <Category>PerformanceHealth</Category>
        <Algorithm>WorstOf</Algorithm>
      </DependencyMonitor>
      <DependencyMonitor ID="GripLogix.VMware.HorizonView.DependencyMonitor.Datacenter.hosts.PoolContainer.AvailabilityState" Accessibility="Internal" Enabled="true" Target="GripLogix.VMware.HorizonView.Datacenter" ParentMonitorID="Health!System.Health.AvailabilityState" Remotable="true" Priority="Normal" RelationshipType="GripLogix.VMware.HorizonView.Datacenter.hosts.PoolContainer" MemberMonitor="Health!System.Health.AvailabilityState">
        <Category>AvailabilityHealth</Category>
        <Algorithm>WorstOf</Algorithm>
      </DependencyMonitor>
      <DependencyMonitor ID="GripLogix.VMware.HorizonView.DependencyMonitor.Datacenter.hosts.PoolContainer.PerformanceState" Accessibility="Internal" Enabled="true" Target="GripLogix.VMware.HorizonView.Datacenter" ParentMonitorID="Health!System.Health.PerformanceState" Remotable="true" Priority="Normal" RelationshipType="GripLogix.VMware.HorizonView.Datacenter.hosts.PoolContainer" MemberMonitor="Health!System.Health.PerformanceState">
        <Category>PerformanceHealth</Category>
        <Algorithm>WorstOf</Algorithm>
      </DependencyMonitor>
      <DependencyMonitor ID="GripLogix.VMware.HorizonView.DependencyMonitor.Datacenter.hosts.ServerContainer.AvailabilityState" Accessibility="Internal" Enabled="true" Target="GripLogix.VMware.HorizonView.Datacenter" ParentMonitorID="Health!System.Health.AvailabilityState" Remotable="true" Priority="Normal" RelationshipType="GripLogix.VMware.HorizonView.Datacenter.hosts.ServerContainer" MemberMonitor="Health!System.Health.AvailabilityState">
        <Category>AvailabilityHealth</Category>
        <Algorithm>WorstOf</Algorithm>
      </DependencyMonitor>
      <DependencyMonitor ID="GripLogix.VMware.HorizonView.DependencyMonitor.Datacenter.hosts.ServerContainer.PerformanceState" Accessibility="Internal" Enabled="true" Target="GripLogix.VMware.HorizonView.Datacenter" ParentMonitorID="Health!System.Health.PerformanceState" Remotable="true" Priority="Normal" RelationshipType="GripLogix.VMware.HorizonView.Datacenter.hosts.ServerContainer" MemberMonitor="Health!System.Health.PerformanceState">
        <Category>PerformanceHealth</Category>
        <Algorithm>WorstOf</Algorithm>
      </DependencyMonitor>
      <DependencyMonitor ID="GripLogix.VMware.HorizonView.DependencyMonitor.PoolContainer.contains.Pool.AvailabilityState" Accessibility="Internal" Enabled="true" Target="GripLogix.VMware.HorizonView.PoolContainer" ParentMonitorID="Health!System.Health.AvailabilityState" Remotable="true" Priority="Normal" RelationshipType="GripLogix.VMware.HorizonView.PoolContainer.hosts.Pool" MemberMonitor="Health!System.Health.AvailabilityState">
        <Category>AvailabilityHealth</Category>
        <Algorithm>WorstOf</Algorithm>
      </DependencyMonitor>
      <DependencyMonitor ID="GripLogix.VMware.HorizonView.DependencyMonitor.PoolContainer.contains.Pool.PerformanceState" Accessibility="Internal" Enabled="true" Target="GripLogix.VMware.HorizonView.PoolContainer" ParentMonitorID="Health!System.Health.PerformanceState" Remotable="true" Priority="Normal" RelationshipType="GripLogix.VMware.HorizonView.PoolContainer.hosts.Pool" MemberMonitor="Health!System.Health.PerformanceState">
        <Category>PerformanceHealth</Category>
        <Algorithm>WorstOf</Algorithm>
      </DependencyMonitor>
      <DependencyMonitor ID="GripLogix.VMware.HorizonView.DependencyMonitor.ServerContainer.contains.Server.AvailabilityState" Accessibility="Internal" Enabled="true" Target="GripLogix.VMware.HorizonView.ServerContainer" ParentMonitorID="Health!System.Health.AvailabilityState" Remotable="true" Priority="Normal" RelationshipType="GripLogix.VMware.HorizonView.ServerContainer.contains.Server" MemberMonitor="Health!System.Health.AvailabilityState">
        <Category>AvailabilityHealth</Category>
        <Algorithm>WorstOf</Algorithm>
      </DependencyMonitor>
      <DependencyMonitor ID="GripLogix.VMware.HorizonView.DependencyMonitor.ServerContainer.contains.Server.PerformanceState" Accessibility="Internal" Enabled="true" Target="GripLogix.VMware.HorizonView.ServerContainer" ParentMonitorID="Health!System.Health.PerformanceState" Remotable="true" Priority="Normal" RelationshipType="GripLogix.VMware.HorizonView.ServerContainer.contains.Server" MemberMonitor="Health!System.Health.PerformanceState">
        <Category>PerformanceHealth</Category>
        <Algorithm>WorstOf</Algorithm>
      </DependencyMonitor>
      <DependencyMonitor ID="GripLogix.VMware.HorizonView.DependencyMonitor.Server.hosts.WindowsService.AvailabilityState" Accessibility="Internal" Enabled="true" Target="GripLogix.VMware.HorizonView.Server" ParentMonitorID="Health!System.Health.AvailabilityState" Remotable="true" Priority="Normal" RelationshipType="GripLogix.VMware.HorizonView.Server.hosts.WindowsService" MemberMonitor="Health!System.Health.AvailabilityState">
        <Category>AvailabilityHealth</Category>
        <Algorithm>WorstOf</Algorithm>
      </DependencyMonitor>
      <DependencyMonitor ID="GripLogix.VMware.HorizonView.DependencyMonitor.Server.hosts.WindowsService.PerformanceState" Accessibility="Internal" Enabled="true" Target="GripLogix.VMware.HorizonView.Server" ParentMonitorID="Health!System.Health.PerformanceState" Remotable="true" Priority="Normal" RelationshipType="GripLogix.VMware.HorizonView.Server.hosts.WindowsService" MemberMonitor="Health!System.Health.PerformanceState">
        <Category>PerformanceHealth</Category>
        <Algorithm>WorstOf</Algorithm>
      </DependencyMonitor>
    </Monitors>
  </Monitoring>
  <LanguagePacks>
    <LanguagePack ID="ENU" IsDefault="true">
      <DisplayStrings>
        <DisplayString ElementID="GripLogix.VMware.HorizonView.ResourcePool">
          <Name>VMware Horizon Resource Pool</Name>
          <Description></Description>
        </DisplayString>
        <DisplayString ElementID="GripLogix.VMware.HorizonView.Server">
          <Name>VMware Horizon Server</Name>
          <Description></Description>
        </DisplayString>
        <DisplayString ElementID="GripLogix.VMware.HorizonView.Server" SubElementID="Name">
          <Name>Name</Name>
          <Description></Description>
        </DisplayString>
        <DisplayString ElementID="GripLogix.VMware.HorizonView.Server" SubElementID="Datacenter">
          <Name>Datacenter</Name>
          <Description></Description>
        </DisplayString>
        <DisplayString ElementID="GripLogix.VMware.HorizonView.WindowsService">
          <Name>VMware Horizon Windows Service</Name>
          <Description></Description>
        </DisplayString>
        <DisplayString ElementID="GripLogix.VMware.HorizonView.WindowsService" SubElementID="Name">
          <Name>Name</Name>
          <Description></Description>
        </DisplayString>
        <DisplayString ElementID="GripLogix.VMware.HorizonView.WindowsService" SubElementID="ServiceDescription">
          <Name>Description</Name>
          <Description></Description>
        </DisplayString>
        <DisplayString ElementID="GripLogix.VMware.HorizonView.WindowsService" SubElementID="ServiceProcessName">
          <Name>Service Process Name</Name>
          <Description></Description>
        </DisplayString>
        <DisplayString ElementID="GripLogix.VMware.HorizonView.Pool">
          <Name>VMware Horizon Pool</Name>
          <Description></Description>
        </DisplayString>
        <DisplayString ElementID="GripLogix.VMware.HorizonView.Pool" SubElementID="Name">
          <Name>Name</Name>
          <Description></Description>
        </DisplayString>
        <DisplayString ElementID="GripLogix.VMware.HorizonView.Pool" SubElementID="GlobalEntitlementName">
          <Name>GlobalEntitlement Name</Name>
          <Description></Description>
        </DisplayString>
        <DisplayString ElementID="GripLogix.VMware.HorizonView.Pool" SubElementID="GlobalEntitlementId">
          <Name>GlobalEntitlement ID</Name>
          <Description></Description>
        </DisplayString>
        <DisplayString ElementID="GripLogix.VMware.HorizonView.ServerContainer">
          <Name>VMware Horizon Datacenter Servers</Name>
          <Description></Description>
        </DisplayString>
        <DisplayString ElementID="GripLogix.VMware.HorizonView.PoolContainer">
          <Name>VMware Horizon Datacenter Pools</Name>
          <Description></Description>
        </DisplayString>
        <DisplayString ElementID="GripLogix.VMware.HorizonView.Datacenter">
          <Name>VMware Horizon Datacenter</Name>
          <Description></Description>
        </DisplayString>
        <DisplayString ElementID="GripLogix.VMware.HorizonView.Datacenter" SubElementID="Name">
          <Name>Name</Name>
          <Description></Description>
        </DisplayString>
        <DisplayString ElementID="GripLogix.VMware.HorizonView.GlobalEntitlement">
          <Name>VMware Horizon Global Entitlement</Name>
          <Description></Description>
        </DisplayString>
        <DisplayString ElementID="GripLogix.VMware.HorizonView.GlobalEntitlement" SubElementID="Id">
          <Name>ID</Name>
          <Description></Description>
        </DisplayString>
        <DisplayString ElementID="GripLogix.VMware.HorizonView.GlobalEntitlement" SubElementID="Name">
          <Name>Name</Name>
          <Description></Description>
        </DisplayString>
        <DisplayString ElementID="GripLogix.VMware.HorizonView.Service">
          <Name>Horizon</Name>
          <Description>Horizon Core Components</Description>
        </DisplayString>
        <DisplayString ElementID="GripLogix.VMware.HorizonView.Discovery.Populate.HorizonviewService">
          <Name>VMware Horizon Service Member Discovery</Name>
          <Description>Populates Horizon Service.</Description>
        </DisplayString>
        <DisplayString ElementID="GripLogix.VMware.HorizonView.Discovery.HorizonView.Objects">
          <Name>VMware Horizon Object Discovery</Name>
          <Description>Horizon Object Discovery. Discovers Global Entitlements, Datacenters and Pools</Description>
        </DisplayString>
        <DisplayString ElementID="GripLogix.VMware.HorizonView.Discovery.HorizonViewServer">
          <Name>VMware Horizon Server Discovery</Name>
          <Description>Horizon Server Discovery</Description>
        </DisplayString>
        <DisplayString ElementID="GripLogix.VMware.HorizonView.Discovery.ServiceManagedByResourcePool">
          <Name>VMware Horizon Service Managed By Resource Pool Discovery</Name>
          <Description>Global Entitlement Managed By Resource Pool Discovery</Description>
        </DisplayString>
        <DisplayString ElementID="GripLogix.VMware.HorizonView.Discovery.HorizonView.WindowsService">
          <Name>VMware Horizon Discovery Horizon Windows Service</Name>
          <Description>Discovers Horizon Windows Service.</Description>
        </DisplayString>
        <DisplayString ElementID="GripLogix.VMware.HorizonView.Discovery.HorizonView.ResourcePool">
          <Name>VMware Horizon ResourcePool Discovery</Name>
          <Description>Horizon ResourcePool Discovery</Description>
        </DisplayString>
        <DisplayString ElementID="GripLogix.VMware.HorizonView.Discovery.GlobalEntitlementManagedByResourcePool">
          <Name>VMware Horizon Global Entitlement Managed By Resource Pool Discovery</Name>
          <Description>Global Entitlement Managed By Resource Pool Discovery</Description>
        </DisplayString>
        <DisplayString ElementID="GripLogix.VMware.HorizonView.Discovery">
          <Name>VMware Horizon Discovery</Name>
        </DisplayString>
        <DisplayString ElementID="GripLogix.VMware.HorizonView.RunAsProfile">
          <Name>VMware Horizon RunAs Profile</Name>
        </DisplayString>
        <DisplayString ElementID="GripLogix.VMware.HorizonView.DependencyMonitor.PoolContainer.contains.Pool.AvailabilityState">
          <Name>Availability State Dependency Monitor Pool Container</Name>
          <Description>Availability State Dependency Monitor Pool Container</Description>
        </DisplayString>
        <DisplayString ElementID="GripLogix.VMware.HorizonView.DependencyMonitor.PoolContainer.contains.Pool.PerformanceState">
          <Name>Performance State Dependency Monitor Pool Container</Name>
          <Description>Performance State Dependency Monitor Pool Container</Description>
        </DisplayString>
        <DisplayString ElementID="GripLogix.VMware.HorizonView.DependencyMonitor.GlobalEntityEntitlement.hosts.Datacenter.AvailabilityState">
          <Name>Availability State Dependency Monitor Global Entity Entitlement</Name>
          <Description>Dependency Monitor Global Entity Entitlement</Description>
        </DisplayString>
        <DisplayString ElementID="GripLogix.VMware.HorizonView.DependencyMonitor.GlobalEntityEntitlement.hosts.Datacenter.PerformanceState">
          <Name>Performance State Dependency Monitor Global Entity Entitlement</Name>
          <Description>Dependency Monitor Global Entity Entitlement</Description>
        </DisplayString>
        <DisplayString ElementID="GripLogix.VMware.HorizonView.DependencyMonitor.Service.contains.GlobalEntitlement.AvailabilityState">
          <Name>Availability State Dependency Monitor Horizon Service</Name>
          <Description>Availability State Dependency Monitor Horizon Service</Description>
        </DisplayString>
        <DisplayString ElementID="GripLogix.VMware.HorizonView.DependencyMonitor.Service.contains.GlobalEntitlement.PerformanceState">
          <Name>Performance State Dependency Monitor Horizon Service</Name>
          <Description>Performance State Dependency Monitor Horizon Service</Description>
        </DisplayString>
        <DisplayString ElementID="GripLogix.VMware.HorizonView.DependencyMonitor.Datacenter.hosts.ServerContainer.AvailabilityState">
          <Name>Availability State Dependency Monitor Datacenter</Name>
          <Description>Availability State Dependency Monitor Datacenter</Description>
        </DisplayString>
        <DisplayString ElementID="GripLogix.VMware.HorizonView.DependencyMonitor.Datacenter.hosts.ServerContainer.PerformanceState">
          <Name>Performance State Dependency Monitor Datacenter</Name>
          <Description>Performance State Dependency Monitor Datacenter</Description>
        </DisplayString>
        <DisplayString ElementID="GripLogix.VMware.HorizonView.DependencyMonitor.Server.hosts.WindowsService.AvailabilityState">
          <Name>Availability State Dependency Monitor Server</Name>
          <Description>Availability State Dependency Monitor Server</Description>
        </DisplayString>
        <DisplayString ElementID="GripLogix.VMware.HorizonView.DependencyMonitor.Server.hosts.WindowsService.PerformanceState">
          <Name>Performance State Dependency Monitor Server</Name>
          <Description>Performance State Dependency Monitor Server</Description>
        </DisplayString>
        <DisplayString ElementID="GripLogix.VMware.HorizonView.DependencyMonitor.ServerContainer.contains.Server.AvailabilityState">
          <Name>Availability State Dependency Monitor Server Container</Name>
          <Description>Availability State Dependency Monitor Server Container</Description>
        </DisplayString>
        <DisplayString ElementID="GripLogix.VMware.HorizonView.DependencyMonitor.ServerContainer.contains.Server.PerformanceState">
          <Name>Performance State Dependency Monitor Server Container</Name>
          <Description>Performance State Dependency Monitor Server Container</Description>
        </DisplayString>
        <DisplayString ElementID="GripLogix.VMware.HorizonView.DependencyMonitor.Datacenter.hosts.PoolContainer.AvailabilityState">
          <Name>Availability State Dependency Monitor Datacenter</Name>
          <Description>Availability State Dependency Monitor Datacenter</Description>
        </DisplayString>
        <DisplayString ElementID="GripLogix.VMware.HorizonView.DependencyMonitor.Datacenter.hosts.PoolContainer.PerformanceState">
          <Name>Performance State Dependency Monitor Datacenter</Name>
          <Description>Performance State Dependency Monitor Datacenter</Description>
        </DisplayString>
      </DisplayStrings>
      <KnowledgeArticles></KnowledgeArticles>
    </LanguagePack>
  </LanguagePacks>
</ManagementPack>